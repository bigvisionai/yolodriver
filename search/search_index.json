{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>YoloDriver is one step to training and inference YOLOv5, YOLOv6, and Yolov7.</p>"},{"location":"#training","title":"Training","text":"<p>Training of YOLOv5, YOLOv6, and YOLOv7 supported.</p>"},{"location":"#training-help","title":"Training Help","text":"<pre><code>python train_driver.py -h\n</code></pre> <pre><code>usage: train_driver.py [-h] \n                       [--model_type MODEL_TYPE] \n                       [--weights WEIGHTS] \n                       [--data_dir DATA_DIR] \n                       [--data_yaml_filename DATA_YAML_FILENAME] \n                       [--image_size IMAGE_SIZE] [--epochs EPOCHS] \n                       [--batch_size BATCH_SIZE]\n                       [--device DEVICE] \n                       [--output_dir OUTPUT_DIR] \n                       [--exp_name EXP_NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --model_type MODEL_TYPE\n                        Which model type? Supported Models: \n                        ['yolov5', 'YOLOv6', 'yolov7']\n  --weights WEIGHTS     Weight filename\n  --data_dir DATA_DIR   Dataset directory\n  --data_yaml_filename  DATA_YAML_FILENAME\n                        Dataset YAML filename. Must be in data_dir\n  --image_size IMAGE_SIZE\n                        Image size (in pixels)\n  --epochs EPOCHS       Max epochs to train\n  --batch_size BATCH_SIZE\n                        Batch size\n  --device DEVICE       cuda device, i.e. 0 or 0,1,2,3 or cpu\n  --output_dir OUTPUT_DIR\n                        Path to save logs and trained-model. \n  --exp_name EXP_NAME   Name of the experiment.\n</code></pre>"},{"location":"#train-data-format","title":"Train Data Format","text":"<p>It supports the YOLO data format.</p> <p>YAML Data file example:</p> <pre><code>train: train/images\nval: valid/images\n\nnc: 5\nnames: ['Ambulance', 'Bus', 'Car', 'Motorcycle', 'Truck']\n</code></pre> <p>Let us assume that the YAML filename above is <code>data.yaml</code>. </p> <p>The data YAML file should be in the data directory (<code>--data_dir</code>).  Path in the YAML file should be with respect to the data directory.</p>"},{"location":"#training-examples","title":"Training Examples","text":"<p>Download the data sample and unzip it. </p> <p>Let's assume the above-unzipped directory path is <code>v_data</code>.</p>"},{"location":"#finetune-yolov5n-from-yolov5","title":"Finetune <code>yolov5n</code> from <code>YOLOv5</code>","text":"<pre><code>python train_driver.py --model_type yolov5\n                       --weights yolov5n \n                       --data_dir v_data \n                       --data_yaml_filename data.yaml \n                       --image_size 640\n                       --epochs 2\n                       --batch_size 2\n                       --device cpu\n</code></pre>"},{"location":"#finetune-yolov6t-from-yolov6","title":"Finetune <code>yolov6t</code> from <code>YOLOv6</code>","text":"<pre><code>python train_driver.py --model_type YOLOv6\n                       --weights yolov6t \n                       --data_dir v_data \n                       --data_yaml_filename data.yaml \n                       --image_size 640\n                       --epochs 2\n                       --batch_size 2\n                       --device cpu\n</code></pre>"},{"location":"#finetune-yolov7tiny-from-yolov7","title":"Finetune <code>yolov7tiny</code> from <code>YOLOv7</code>","text":"<pre><code>python train_driver.py --model_type yolov7\n                       --weights YOLOv7tiny \n                       --data_dir v_data \n                       --data_yaml_filename data.yaml \n                       --image_size 640\n                       --epochs 2\n                       --batch_size 2\n                       --device cpu\n</code></pre>"},{"location":"#inference","title":"Inference","text":"<p>Inference of YOLOv5 supported. </p>"},{"location":"#inference-help","title":"Inference Help","text":"<pre><code>python infer_driver.py -h \n</code></pre> <pre><code>usage: infer_driver.py [-h]\n                       [--model_type MODEL_TYPE]\n                       [--weights WEIGHTS]\n                       [--source SOURCE]\n                       [--data_yaml_path DATA_YAML_PATH]\n                       [--image_size IMAGE_SIZE [IMAGE_SIZE ...]]\n                       [--conf_thres CONF_THRES]\n                       [--iou_thres IOU_THRES]\n                       [--device DEVICE]\n                       [--view_img]\n                       [--save_img_vid]\n                       [--hide_labels]\n                       [--hide_conf]\n                       [--no_save_txt]\n                       [--output_dir OUTPUT_DIR]\n                       [--exp_name EXP_NAME]\n                       [--exist_ok]\n</code></pre>"},{"location":"#inference-using-yolov5n-from-yolov5","title":"Inference using <code>yolov5n</code> from <code>YOLOv5</code>","text":"<pre><code>python infer_driver.py --model_type yolov5\n                       --weights path/to/weight\n                       --source image/dir/path or video/path or image/path\n                       --data_yaml_path data/YAML/path\n                       --image_size [640]\n                       --conf_thres 0.25\n                       --iou_thres 0.45\n                       --device cpu\n                       --output_dir output/dir/path\n                       --exp_name exp_name\n</code></pre>"}]}